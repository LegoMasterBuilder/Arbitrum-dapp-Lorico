{
  "version": 3,
  "sources": ["../../.pnpm/htmlnano@2.1.1_postcss@8.4.38_terser@5.31.1_typescript@5.4.5/node_modules/htmlnano/lib/modules/deduplicateAttributeValues.mjs"],
  "sourcesContent": ["import { attributesWithLists } from './collapseAttributeWhitespace.mjs';\n\n/** Deduplicate values inside list-like attributes (e.g. class, rel) */\nexport function onAttrs() {\n    return (attrs) => {\n        const newAttrs = attrs;\n        Object.keys(attrs).forEach(attrName => {\n            if (! attributesWithLists.has(attrName)) {\n                return;\n            }\n\n            if (typeof attrs[attrName] !== 'string') {\n                return;\n            }\n\n            const attrValues = attrs[attrName].split(/\\s/);\n            const uniqeAttrValues = new Set();\n            const deduplicatedAttrValues = [];\n\n            attrValues.forEach((attrValue) => {\n                if (! attrValue) {\n                    // Keep whitespaces\n                    deduplicatedAttrValues.push('');\n                    return;\n                }\n\n                if (uniqeAttrValues.has(attrValue)) {\n                    return;\n                }\n\n                deduplicatedAttrValues.push(attrValue);\n                uniqeAttrValues.add(attrValue);\n            });\n\n            newAttrs[attrName] = deduplicatedAttrValues.join(' ');\n        });\n\n        return newAttrs;\n    };\n}\n"],
  "mappings": ";;;;;;;AAGO,SAAS,UAAU;AACtB,SAAO,CAAC,UAAU;AACd,UAAM,WAAW;AACjB,WAAO,KAAK,KAAK,EAAE,QAAQ,cAAY;AACnC,UAAI,CAAE,oBAAoB,IAAI,QAAQ,GAAG;AACrC;AAAA,MACJ;AAEA,UAAI,OAAO,MAAM,QAAQ,MAAM,UAAU;AACrC;AAAA,MACJ;AAEA,YAAM,aAAa,MAAM,QAAQ,EAAE,MAAM,IAAI;AAC7C,YAAM,kBAAkB,oBAAI,IAAI;AAChC,YAAM,yBAAyB,CAAC;AAEhC,iBAAW,QAAQ,CAAC,cAAc;AAC9B,YAAI,CAAE,WAAW;AAEb,iCAAuB,KAAK,EAAE;AAC9B;AAAA,QACJ;AAEA,YAAI,gBAAgB,IAAI,SAAS,GAAG;AAChC;AAAA,QACJ;AAEA,+BAAuB,KAAK,SAAS;AACrC,wBAAgB,IAAI,SAAS;AAAA,MACjC,CAAC;AAED,eAAS,QAAQ,IAAI,uBAAuB,KAAK,GAAG;AAAA,IACxD,CAAC;AAED,WAAO;AAAA,EACX;AACJ;",
  "names": []
}
