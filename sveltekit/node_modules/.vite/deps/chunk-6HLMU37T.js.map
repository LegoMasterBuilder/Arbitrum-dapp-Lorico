{
  "version": 3,
  "sources": ["../../.pnpm/htmlnano@2.1.1_postcss@8.4.38_terser@5.31.1_typescript@5.4.5/node_modules/htmlnano/lib/modules/removeRedundantAttributes.mjs"],
  "sourcesContent": ["// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#JavaScript_types\nexport const redundantScriptTypes = new Set([\n    'application/javascript',\n    'application/ecmascript',\n    'application/x-ecmascript',\n    'application/x-javascript',\n    'text/javascript',\n    'text/ecmascript',\n    'text/javascript1.0',\n    'text/javascript1.1',\n    'text/javascript1.2',\n    'text/javascript1.3',\n    'text/javascript1.4',\n    'text/javascript1.5',\n    'text/jscript',\n    'text/livescript',\n    'text/x-ecmascript',\n    'text/x-javascript'\n]);\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#missing-value-default\nconst missingValueDefaultAttributes = {\n    'form': {\n        'method': 'get'\n    },\n\n    input: {\n        type: 'text'\n    },\n\n    button: {\n        // https://html.spec.whatwg.org/multipage/form-elements.html#attr-button-type\n        type: 'submit'\n    },\n\n    'script': {\n        'language': 'javascript',\n        'type': attrs => {\n            for (const [attrName, attrValue] of Object.entries(attrs)) {\n                if (attrName.toLowerCase() !== 'type') {\n                    continue;\n                }\n\n                return redundantScriptTypes.has(attrValue);\n            }\n\n            return false;\n        },\n        // Remove attribute if the function returns false\n        'charset': attrs => {\n            // The charset attribute only really makes sense on “external” SCRIPT elements:\n            // http://perfectionkills.com/optimizing-html/#8_script_charset\n            return !attrs.src;\n        }\n    },\n\n    'style': {\n        'media': 'all',\n        'type': 'text/css'\n    },\n\n    'link': {\n        media: 'all',\n        'type': attrs => {\n            // https://html.spec.whatwg.org/multipage/links.html#link-type-stylesheet\n            let isRelStyleSheet = false;\n            let isTypeTextCSS = false;\n\n            if (attrs) {\n                for (const [attrName, attrValue] of Object.entries(attrs)) {\n                    if (attrName.toLowerCase() === 'rel' && attrValue === 'stylesheet') {\n                        isRelStyleSheet = true;\n                    }\n                    if (attrName.toLowerCase() === 'type' && attrValue === 'text/css') {\n                        isTypeTextCSS = true;\n                    }\n                }\n            }\n\n            // Only \"text/css\" is redudant for link[rel=stylesheet]. Otherwise \"type\" shouldn't be removed\n            return isRelStyleSheet && isTypeTextCSS;\n        }\n    },\n\n    // See: https://html.spec.whatwg.org/#lazy-loading-attributes\n    img: {\n        'loading': 'eager',\n        // https://html.spec.whatwg.org/multipage/embedded-content.html#dom-img-decoding\n        decoding: 'auto'\n    },\n    iframe: {\n        'loading': 'eager'\n    },\n\n    // https://html.spec.whatwg.org/multipage/media.html#htmltrackelement\n    track: {\n        kind: 'subtitles'\n    },\n\n    textarea: {\n        // https://html.spec.whatwg.org/multipage/form-elements.html#dom-textarea-wrap\n        wrap: 'soft'\n    },\n\n    area: {\n        // https://html.spec.whatwg.org/multipage/image-maps.html#attr-area-shape\n        shape: 'rect'\n    }\n};\n\nconst tagsHaveMissingValueDefaultAttributes = new Set(Object.keys(missingValueDefaultAttributes));\n\n/** Removes redundant attributes */\nexport function onAttrs() {\n    return (attrs, node) => {\n        if (!node.tag) return attrs;\n\n        const newAttrs = attrs;\n\n        if (tagsHaveMissingValueDefaultAttributes.has(node.tag)) {\n            const tagRedundantAttributes = missingValueDefaultAttributes[node.tag];\n\n            for (const redundantAttributeName of Object.keys(tagRedundantAttributes)) {\n                let tagRedundantAttributeValue = tagRedundantAttributes[redundantAttributeName];\n                let isRemove = false;\n\n                if (typeof tagRedundantAttributeValue === 'function') {\n                    isRemove = tagRedundantAttributeValue(attrs);\n                } else if (attrs[redundantAttributeName] === tagRedundantAttributeValue) {\n                    isRemove = true;\n                }\n\n                if (isRemove) {\n                    delete newAttrs[redundantAttributeName];\n                }\n            }\n        }\n\n        return newAttrs;\n    };\n}\n"],
  "mappings": ";AACO,IAAM,uBAAuB,oBAAI,IAAI;AAAA,EACxC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AAGD,IAAM,gCAAgC;AAAA,EAClC,QAAQ;AAAA,IACJ,UAAU;AAAA,EACd;AAAA,EAEA,OAAO;AAAA,IACH,MAAM;AAAA,EACV;AAAA,EAEA,QAAQ;AAAA;AAAA,IAEJ,MAAM;AAAA,EACV;AAAA,EAEA,UAAU;AAAA,IACN,YAAY;AAAA,IACZ,QAAQ,WAAS;AACb,iBAAW,CAAC,UAAU,SAAS,KAAK,OAAO,QAAQ,KAAK,GAAG;AACvD,YAAI,SAAS,YAAY,MAAM,QAAQ;AACnC;AAAA,QACJ;AAEA,eAAO,qBAAqB,IAAI,SAAS;AAAA,MAC7C;AAEA,aAAO;AAAA,IACX;AAAA;AAAA,IAEA,WAAW,WAAS;AAGhB,aAAO,CAAC,MAAM;AAAA,IAClB;AAAA,EACJ;AAAA,EAEA,SAAS;AAAA,IACL,SAAS;AAAA,IACT,QAAQ;AAAA,EACZ;AAAA,EAEA,QAAQ;AAAA,IACJ,OAAO;AAAA,IACP,QAAQ,WAAS;AAEb,UAAI,kBAAkB;AACtB,UAAI,gBAAgB;AAEpB,UAAI,OAAO;AACP,mBAAW,CAAC,UAAU,SAAS,KAAK,OAAO,QAAQ,KAAK,GAAG;AACvD,cAAI,SAAS,YAAY,MAAM,SAAS,cAAc,cAAc;AAChE,8BAAkB;AAAA,UACtB;AACA,cAAI,SAAS,YAAY,MAAM,UAAU,cAAc,YAAY;AAC/D,4BAAgB;AAAA,UACpB;AAAA,QACJ;AAAA,MACJ;AAGA,aAAO,mBAAmB;AAAA,IAC9B;AAAA,EACJ;AAAA;AAAA,EAGA,KAAK;AAAA,IACD,WAAW;AAAA;AAAA,IAEX,UAAU;AAAA,EACd;AAAA,EACA,QAAQ;AAAA,IACJ,WAAW;AAAA,EACf;AAAA;AAAA,EAGA,OAAO;AAAA,IACH,MAAM;AAAA,EACV;AAAA,EAEA,UAAU;AAAA;AAAA,IAEN,MAAM;AAAA,EACV;AAAA,EAEA,MAAM;AAAA;AAAA,IAEF,OAAO;AAAA,EACX;AACJ;AAEA,IAAM,wCAAwC,IAAI,IAAI,OAAO,KAAK,6BAA6B,CAAC;AAGzF,SAAS,UAAU;AACtB,SAAO,CAAC,OAAO,SAAS;AACpB,QAAI,CAAC,KAAK,IAAK,QAAO;AAEtB,UAAM,WAAW;AAEjB,QAAI,sCAAsC,IAAI,KAAK,GAAG,GAAG;AACrD,YAAM,yBAAyB,8BAA8B,KAAK,GAAG;AAErE,iBAAW,0BAA0B,OAAO,KAAK,sBAAsB,GAAG;AACtE,YAAI,6BAA6B,uBAAuB,sBAAsB;AAC9E,YAAI,WAAW;AAEf,YAAI,OAAO,+BAA+B,YAAY;AAClD,qBAAW,2BAA2B,KAAK;AAAA,QAC/C,WAAW,MAAM,sBAAsB,MAAM,4BAA4B;AACrE,qBAAW;AAAA,QACf;AAEA,YAAI,UAAU;AACV,iBAAO,SAAS,sBAAsB;AAAA,QAC1C;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AACJ;",
  "names": []
}
