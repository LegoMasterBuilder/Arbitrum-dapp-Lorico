import {
  optionalImport
} from "./chunk-DLA6KCZJ.js";
import "./chunk-P3KJJCU4.js";

// node_modules/.pnpm/htmlnano@2.1.1_postcss@8.4.38_terser@5.31.1_typescript@5.4.5/node_modules/htmlnano/lib/modules/minifySvg.mjs
async function minifySvg(tree, options, svgoOptions = {}) {
  const svgo = await optionalImport("svgo");
  if (!svgo) return tree;
  tree.match({ tag: "svg" }, (node) => {
    let svgStr = tree.render(node, { closingSingleTag: "slash", quoteAllAttributes: true });
    try {
      const result = svgo.optimize(svgStr, svgoOptions);
      node.tag = false;
      node.attrs = {};
      node.content = [result.data];
      return node;
    } catch (error) {
      console.error("htmlnano fails to minify the svg:");
      console.error(error);
      if (error.name === "SvgoParserError") {
        console.error(error.toString());
      }
      return node;
    }
  });
  return tree;
}
export {
  minifySvg as default
};
//# sourceMappingURL=minifySvg-4MATEK4U.js.map
